#include <iostream>
#include <vector>
#include <queue>

int findKthLargest(std::vector<int>& nums, int k) {
    // Create a min-heap (priority queue)
    std::priority_queue<int, std::vector<int>, std::greater<int>> minHeap;

    // Iterate through the numbers
    for (int num : nums) {
        // Add the current number to the min-heap
        minHeap.push(num);
        // If the size of the heap exceeds k, remove the smallest element
        if (minHeap.size() > k) {
            minHeap.pop();
        }
    }

    // The root of the min-heap is the kth largest element
    return minHeap.top();
}

int main() {
    int n, k;
    std::cout << "Enter the number of elements: ";
    std::cin >> n;

    std::vector<int> nums(n);
    std::cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        std::cin >> nums[i];
    }

    std::cout << "Enter the value of k: ";
    std::cin >> k;

    int kthLargest = findKthLargest(nums, k);
    std::cout << "The " << k << "th largest element is: " << kthLargest << std::endl;

    return 0;
}